<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Property Distribution Aizu - 0118]]></title>
    <url>%2F2018%2F03%2F10%2FProperty-Distribution-Aizu-0118%2F</url>
    <content type="text"><![CDATA[最基础的dfs 剪枝都不需要的 校队选拔被学弟虐了Orz 谁知道 题目那么水。。 还是自己水平菜 大二了要更加加油呢 一开始area忘记初始化了wa了两发 ORZ 1234567891011121314151617181920212223242526272829303132333435363738#include &lt;iostream&gt;using namespace std;int area;const int maxn=105;char maze[maxn][maxn];const int step[][2]=&#123;&#123;-1,0&#125;,&#123;1,0&#125;,&#123;0,-1&#125;,&#123;0,1&#125;&#125;;int N,M;void dfs(int x,int y,char ch)&#123; maze[x][y]='$'; for(int i=0;i&lt;4;i++)&#123; int nx=x+step[i][0],ny=y+step[i][1]; if(nx&gt;=0&amp;&amp;ny&gt;=0&amp;&amp;nx&lt;N&amp;&amp;ny&lt;M&amp;&amp;maze[nx][ny]==ch)&#123; dfs(nx,ny,ch); &#125; &#125; return;&#125;int main() &#123; // freopen("test","r",stdin); while(cin&gt;&gt;N&gt;&gt;M&amp;&amp;N+M)&#123; area=0; for(int i=0;i&lt;N;i++) for(int j=0;j&lt;M;j++) cin&gt;&gt;maze[i][j]; for(int i=0;i&lt;N;i++)&#123; for(int j=0;j&lt;M;j++)&#123; if(maze[i][j]!='$')&#123; char ch=maze[i][j]; dfs(i,j,ch); area++; &#125; &#125; &#125; cout&lt;&lt;area&lt;&lt;endl; &#125; return 0;&#125;]]></content>
      <categories>
        <category>挑战程序设计竞赛 第二章</category>
      </categories>
      <tags>
        <tag>dfs 水</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[postBroken Keyboard (a.k.a. Beiju Text) UVA - 11988]]></title>
    <url>%2F2018%2F03%2F06%2FpostBroken-Keyboard-a-k-a-Beiju-Text-UVA-11988%2F</url>
    <content type="text"><![CDATA[123456789101112131415161718192021222324252627282930313233#include&lt;iostream&gt;#include&lt;cstring&gt;#include&lt;string&gt;#include&lt;algorithm&gt;using namespace std;const int maxn=100000+5;int last ,cur;int main() &#123; char s[maxn]; freopen("test","r",stdin); while(scanf("%s",s+1)==1)&#123; int next[maxn]; //memset(next,0,sizeof(next)); int n=strlen(s+1); last=cur=0; next[0]=0; for(int i=1;i&lt;=n;i++)&#123; if(s[i]=='[') cur=0; else if(s[i]==']') cur=last; else&#123; next[i]=next[cur]; //添加结束位 next[cur]=i; //下一位 if(cur==last) last=i; // 更新last位置 cur=i; &#125; &#125; for(int i=next[0];i!=0;i=next[i]) cout&lt;&lt;s[i]; cout&lt;&lt;endl; &#125; return 0;&#125; 代码倒是很简单 但是数组链表卡了好久 没看懂 最后靠手算2333 简单来说就是s要留一个预留位置 然后以0位结束 next指的是下一个元素的位置]]></content>
      <categories>
        <category>紫书第六章例题</category>
      </categories>
      <tags>
        <tag>链表的简单使用</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Throwing cards away I UVA - 10935]]></title>
    <url>%2F2018%2F03%2F04%2FThrowing-cards-away-I-UVA-10935%2F</url>
    <content type="text"><![CDATA[题目就是最基本的队列基本应用 先进先出 被格式卡了一会 主要原因就是1的时候没空格emmmmm绝了 1234567891011121314151617181920212223242526272829303132#include&lt;iostream&gt;#include&lt;queue&gt;using namespace std;int main()&#123; int n;// freopen("in","r",stdin); while(cin&gt;&gt;n&amp;&amp;n)&#123; queue&lt;int&gt; q; bool flag=true; for(int i=1;i&lt;=n;i++) q.push(i); cout&lt;&lt;"Discarded cards:"; while(q.size()!=1)&#123; if(flag)&#123; cout&lt;&lt;" "&lt;&lt;q.front(); q.pop(); if(q.size()!=1)&#123; cout&lt;&lt;","; &#125; flag=!flag; &#125; else&#123; q.push(q.front()); q.pop(); flag=!flag; &#125; &#125; cout&lt;&lt;endl; cout&lt;&lt;"Remaining card: "&lt;&lt;q.front()&lt;&lt;endl; &#125; return 0;&#125;]]></content>
      <categories>
        <category>紫书第五章习题</category>
      </categories>
      <tags>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ducci Sequence UVA - 1594]]></title>
    <url>%2F2018%2F03%2F04%2FDucci-Sequence-UVA-1594%2F</url>
    <content type="text"><![CDATA[按照题目来就好了 到1000次时还不全为零那就是循环数列 12345678910111213141516171819202122232425262728293031323334353637383940414243444546#include &lt;iostream&gt;#include &lt;cmath&gt;using namespace std;#define MAXN 20bool compare(int *a,int *b,int n)&#123; for(int i=0;i&lt;n;i++)&#123; if(a[i]==b[i]) continue; else return false; &#125; return true;&#125;int main() &#123; int n; int T; freopen("test","r",stdin); cin&gt;&gt;T; while(T--) &#123; cin &gt;&gt; n; int exp[MAXN]; int cha[MAXN]; int zero[MAXN]; for (int i = 0; i &lt; n; i++) cin &gt;&gt; exp[i]; for (int i = 0; i &lt; n; i++) cha[i] = exp[i]; for (int i = 0; i &lt; n; i++) zero[i] = 0; int i; for (i = 0; i &lt; 1000; i++) &#123; int x = cha[0]; for (int j = 0; j &lt; n - 3; j++) &#123; cha[j] = abs(cha[j] - cha[(j + 1) % n]); &#125; cha[n - 1] = abs(cha[n - 1] - x); if (compare(cha, zero, n)) &#123; cout &lt;&lt; "ZERO" &lt;&lt; endl; i = 1005; &#125; &#125; if (i != 1006) cout &lt;&lt; "LOOP" &lt;&lt; endl; &#125; return 0;&#125;]]></content>
      <categories>
        <category>紫书第五章习题</category>
      </categories>
      <tags>
        <tag>水题</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F03%2F03%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
